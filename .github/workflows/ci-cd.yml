name: docker-ci

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: login to container-registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: extract metadata (tags, labels) for docker
      id: meta
      uses: docker/metadata-action@v1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: build-and-push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: notify_success
      if: ${{ success() }}
      run: ./.ci-notify.sh ✅ ${{secrets.TELEGRAM_BOT_TOKEN}} ${{secrets.TELEGRAM_USER_ID}} "${{github.event.head_commit.message}}"
    - name: notify_falure
      if: ${{ failure() }}
      run: ./.ci-notify.sh ❌ ${{secrets.TELEGRAM_BOT_TOKEN}} ${{secrets.TELEGRAM_USER_ID}} "${{github.event.head_commit.message}}"

  trigger-cd:
    needs: build-and-push
    if: ${{ github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    steps:
    - name: extract short sha
      shell: bash
      run: echo "::set-output name=sha::$(echo ${{github.sha}} | cut -c1-7)"
      id: short_sha
    - name: extract branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: webhook
      uses: distributhor/workflow-webhook@v1
      env:
        webhook_url: ${{ secrets.WEBHOOK_URL }}
        webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
        data: '{
          "pusher": "${{github.actor}}",
          "branch": "${{steps.extract_branch.outputs.branch}}",
          "message": "${{github.event.head_commit.message}}",
          "short_sha": "${{steps.short_sha.outputs.sha}}",
          "action_url": "${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}"
          }'